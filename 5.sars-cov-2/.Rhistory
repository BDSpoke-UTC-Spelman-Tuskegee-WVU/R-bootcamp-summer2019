x[j] = x[j] - x[j-1]
}
x[x<0] = 0
x
if( debug > 0) {
print(paste("i=", i))
#print(x)
}
if ( media(x) > 2 ) {}
if ( median(x) > 2 ) {}
mGT= generation.time("gamma", c(3, 1.5))
R0EG = estimate.R(x, GT=mGT,  methods=c('EG'), pop.size = 100000, nsim=10 )
tb$R0EG[i] = as.numeric(unlist(R0EG$estimates$EG$R))
} else {
if ( median(x) > 2 ) {
mGT= generation.time("gamma", c(3, 1.5))
R0EG = estimate.R(x, GT=mGT,  methods=c('EG'), pop.size = 100000, nsim=10 )
tb$R0EG[i] = as.numeric(unlist(R0EG$estimates$EG$R))
} else {
tb$R0EG[i]  = NA
}
i= 5
#for( i in 1:nrow(tb[,1])){
x = as.vector(t(tb[i,]))
for (j in 2:length(x)){
x[j] = x[j] - x[j-1]
}
x[x<0] = 0
if( debug > 0) {
print(paste("i=", i))
#print(x)
}
i= 5
#for( i in 1:nrow(tb[,1])){
x = as.vector(t(tb[i,]))
for (j in 2:length(x)){
x[j] = x[j] - x[j-1]
}
x[x<0] = 0
if( debug > 0) {
print(paste("i=", i))
#print(x)
}
x
median(x)
for( i in 1:nrow(tb[,1])){
x = as.vector(t(tb[i,]))
for (j in 2:length(x)){
x[j] = x[j] - x[j-1]
}
x[x<0] = 0
if( debug > 0) {
print(paste("i=", i))
#print(x)
}
#str(x)
if ( median(x) > 2 ) {
mGT= generation.time("gamma", c(3, 1.5))
R0EG = estimate.R(x, GT=mGT,  methods=c('EG'), pop.size = 100000, nsim=10 )
tb$R0EG[i] = as.numeric(unlist(R0EG$estimates$EG$R))
} else {
tb$R0EG[i]  = NA
}
}
1:nrow(tb[,1])
nrow(tb[,1])
tb = tb.bf
total.timepoints = 76
debug = 0
i= 5
for( i in 1:74){
x = as.vector(t(tb[i,]))
for (j in 2:length(x)){
x[j] = x[j] - x[j-1]
}
x[x<0] = 0
if( debug > 0) {
print(paste("i=", i))
#print(x)
}
#str(x)
if ( median(x) > 2 ) {
mGT= generation.time("gamma", c(3, 1.5))
R0EG = estimate.R(x, GT=mGT,  methods=c('EG'), pop.size = 100000, nsim=10 )
tb$R0EG[i] = as.numeric(unlist(R0EG$estimates$EG$R))
} else {
tb$R0EG[i]  = NA
}
}
View(tb)
View(tb)
tb = tb.bf
total.timepoints = 76
debug = 0
i= 5
for( i in 1:74){
x = as.vector(t(tb[i,]))
for (j in 2:length(x)){
x[j] = x[j] - x[j-1]
}
x[x<0] = 0
if( debug > 0) {
print(paste("i=", i))
#print(x)
}
#str(x)
if ( max(x) > 20 ) {
mGT= generation.time("gamma", c(3, 1.5))
R0EG = estimate.R(x, GT=mGT,  methods=c('EG'), pop.size = 100000, nsim=10 )
tb$R0EG[i] = as.numeric(unlist(R0EG$estimates$EG$R))
} else {
tb$R0EG[i]  = NA
}
}
View(tb)
i= 68
x = as.vector(t(tb[i,]))
x
x = as.vector(t(tb[i,1:76]))
x
for (j in 2:length(x)){
x[j] = x[j] - x[j-1]
}
x[x<0] = 0
x
mGT= generation.time("gamma", c(3, 1.5))
R0EG = estimate.R(x, GT=mGT,  methods=c('EG'), pop.size = 100000, nsim=10 )
tb$R0EG[i] = as.numeric(unlist(R0EG$estimates$EG$R))
R0EG
tb = tb.bf
total.timepoints = 76
debug = 0
#i= 68
for( i in 1:74){
x = as.vector(t(tb[i,1:76]))
for (j in 2:length(x)){
x[j] = x[j] - x[j-1]
}
x[x<0] = 0
#str(x)
if ( max(x) > 20 ) {
mGT= generation.time("gamma", c(3, 1.5))
R0EG = estimate.R(x, GT=mGT,  methods=c('EG'), pop.size = 100000, nsim=10 )
tb$R0EG[i] = as.numeric(unlist(R0EG$estimates$EG$R))
} else {
tb$R0EG[i]  = NA
}
}
View(tb)
hist(tb$R0EG, br = 40)
hist(tb$R0EG)
hist(tb$R0EG)
tb = tb.af
total.timepoints = 76
debug = 0
#i= 68
for( i in 1:74){
x = as.vector(t(tb[i,1:76]))
for (j in 2:length(x)){
x[j] = x[j] - x[j-1]
}
x[x<0] = 0
#str(x)
if ( max(x) > 20 ) {
mGT= generation.time("gamma", c(3, 1.5))
R0EG = estimate.R(x, GT=mGT,  methods=c('EG'), pop.size = 100000, nsim=10 )
tb$R0EG[i] = as.numeric(unlist(R0EG$estimates$EG$R))
} else {
tb$R0EG[i]  = NA
}
}
tb = tb.af
total.timepoints = 21
debug = 0
#i= 68
for( i in 1:74){
x = as.vector(t(tb[i,1:76]))
for (j in 2:length(x)){
x[j] = x[j] - x[j-1]
}
x[x<0] = 0
#str(x)
if ( max(x) > 20 ) {
mGT= generation.time("gamma", c(3, 1.5))
R0EG = estimate.R(x, GT=mGT,  methods=c('EG'), pop.size = 100000, nsim=10 )
tb$R0EG[i] = as.numeric(unlist(R0EG$estimates$EG$R))
} else {
tb$R0EG[i]  = NA
}
}
tb = tb.af
total.timepoints = 21
debug = 0
#i= 68
for( i in 1:21){
x = as.vector(t(tb[i,1:21]))
for (j in 2:length(x)){
x[j] = x[j] - x[j-1]
}
x[x<0] = 0
#str(x)
if ( max(x) > 20 ) {
mGT= generation.time("gamma", c(3, 1.5))
R0EG = estimate.R(x, GT=mGT,  methods=c('EG'), pop.size = 100000, nsim=10 )
tb$R0EG[i] = as.numeric(unlist(R0EG$estimates$EG$R))
} else {
tb$R0EG[i]  = NA
}
}
hist(tb$R0EG)
tb.af = tb
View(tb.bf)
rm(list=ls())
library(tidyverse)
library(readr)
library(dplyr)
library(R0)
infile ="time_series_covid19_confirmed_US.csv"
tb = read_csv(infile)
head(tb)
tb.ori = tb
tb = tb[ tb$Province_State == 'Wisconsin'  ,   ]
colnames = names(tb)
primary = '4/7/20'
start1 = (1:length(tb[1,]))[colnames == "1/22/20"]
start2 = (1:length(tb[1,]))[colnames == "4/21/20"]
(1:length(names(tb))) [names(tb)=='4/7/20']
tb.bf = tb[, 12:87 ]
(1:length(names(tb))) [names(tb)=='4/21/20']
tb.af= tb[,102:122  ]
tb.bf = as.data.frame(tb.bf)
tb = tb.bf
total.timepoints = 76
debug = 0
#i= 68
for( i in 1:74){
x = as.vector(t(tb[i,1:76]))
for (j in 2:length(x)){
x[j] = x[j] - x[j-1]
}
x[x<0] = 0
#str(x)
if ( max(x) > 20 ) {
mGT= generation.time("gamma", c(3, 1.5))
R0EG = estimate.R(x, GT=mGT,  methods=c('EG'), pop.size = 100000, nsim=10 )
tb$R0EG[i] = as.numeric(unlist(R0EG$estimates$EG$R))
} else {
tb$R0EG[i]  = NA
}
}
View(tb.af)
head(tb.af)
rm(list=ls())
library(tidyverse)
library(readr)
library(dplyr)
library(R0)
infile ="time_series_covid19_confirmed_US.csv"
tb = read_csv(infile)
head(tb)
tb.ori = tb
tb = tb[ tb$Province_State == 'Wisconsin'  ,   ]
colnames = names(tb)
primary = '4/7/20'
start1 = (1:length(tb[1,]))[colnames == "1/22/20"]
start2 = (1:length(tb[1,]))[colnames == "4/21/20"]
(1:length(names(tb))) [names(tb)=='4/7/20']
tb.bf = tb[, 12:87 ]
(1:length(names(tb))) [names(tb)=='4/21/20']
tb.af= tb[,102:122  ]
tb.bf = as.data.frame(tb.bf)
tb = tb.bf
total.timepoints = 76
debug = 0
#i= 68
for( i in 1:74){
x = as.vector(t(tb[i,1:76]))
for (j in 2:length(x)){
x[j] = x[j] - x[j-1]
}
x[x<0] = 0
#str(x)
if ( max(x) > 20 ) {
mGT= generation.time("gamma", c(3, 1.5))
R0EG = estimate.R(x, GT=mGT,  methods=c('EG'), pop.size = 100000, nsim=10 )
tb$R0EG[i] = as.numeric(unlist(R0EG$estimates$EG$R))
} else {
tb$R0EG[i]  = NA
}
}
tb.af.R0EG
tb.bf = as.data.frame(tb.bf)
tb = tb.bf
total.timepoints = 76
debug = 0
#i= 68
for( i in 1:74){
x = as.vector(t(tb[i,1:76]))
for (j in 2:length(x)){
x[j] = x[j] - x[j-1]
}
x[x<0] = 0
#str(x)
if ( max(x) > 20 ) {
mGT= generation.time("gamma", c(3, 1.5))
R0EG = estimate.R(x, GT=mGT,  methods=c('EG'), pop.size = 100000, nsim=10 )
tb$R0EG[i] = as.numeric(unlist(R0EG$estimates$EG$R))
} else {
tb$R0EG[i]  = NA
}
}
View(tb.af)
View(tb.bf)
tb.bf = as.data.frame(tb.bf)
tb.bf= tb.bf[ tb.bf$`4/6/20` > 20, ]
tb.bf = as.data.frame(tb.bf)
tb.bf= tb.bf[ tb.bf$`4/6/20` > 20, ]
View(tb.bf)
tb = tb.bf
total.timepoints = 76
debug = 0
#i= 68
for( i in 1:16){
x = as.vector(t(tb[i,1:76]))
for (j in 2:length(x)){
x[j] = x[j] - x[j-1]
}
x[x<0] = 0
#str(x)
if ( max(x) > 20 ) {
mGT= generation.time("gamma", c(3, 1.5))
R0EG = estimate.R(x, GT=mGT,  methods=c('EG'), pop.size = 100000, nsim=10 )
tb$R0EG[i] = as.numeric(unlist(R0EG$estimates$EG$R))
} else {
tb$R0EG[i]  = NA
}
}
hist(tb$R0EG)
tb.bf.R0EG = tb$R0EG
tb.af = as.data.frame(tb.af)
tb.af= tb.bf[ tb.af$`5/11/20` > 30, ]
View(tb.af)
tb.af = as.data.frame(tb.af)
tb.af= tb.bf[ tb.af$`5/11/20` > 30, ]
tb.af = tb.af[ !is.na(tb.af[,1])]
tb.af = as.data.frame(tb.af)
tb.af= tb.bf[ tb.af$`5/11/20` > 30, ]
(1:length(names(tb))) [names(tb)=='4/21/20']
tb.af= tb[,102:122  ]
(1:length(names(tb))) [names(tb.ori)=='4/21/20']
tb.af= tb.ori[,102:122  ]
tb.af = as.data.frame(tb.af)
tb.af= tb.bf[ tb.af$`5/11/20` > 30, ]
View(tb.af)
View(tb.af)
infile ="time_series_covid19_confirmed_US.csv"
tb = read_csv(infile)
head(tb)
tb.ori = tb
tb = tb[ tb$Province_State == 'Wisconsin'  ,   ]
tb.ori = tb
colnames = names(tb)
primary = '4/7/20'
start1 = (1:length(tb[1,]))[colnames == "1/22/20"]
start2 = (1:length(tb[1,]))[colnames == "4/21/20"]
(1:length(names(tb))) [names(tb)=='4/7/20']
tb.bf = tb[, 12:87 ]
(1:length(names(tb))) [names(tb)=='4/21/20']
tb.af= tb[,102:122  ]
tb.bf = as.data.frame(tb.bf)
tb.bf= tb.bf[ tb.bf$`4/6/20` > 20, ] #16 rows
tb.bf = as.data.frame(tb.bf)
tb.bf= tb.bf[ tb.bf$`4/6/20` > 20, ] #16 rows
tb = tb.bf
total.timepoints = 76
debug = 0
#i= 68
for( i in 1:16){
x = as.vector(t(tb[i,1:76]))
for (j in 2:length(x)){
x[j] = x[j] - x[j-1]
}
x[x<0] = 0
#str(x)
if ( max(x) > 20 ) {
mGT= generation.time("gamma", c(3, 1.5))
R0EG = estimate.R(x, GT=mGT,  methods=c('EG'), pop.size = 100000, nsim=10 )
tb$R0EG[i] = as.numeric(unlist(R0EG$estimates$EG$R))
} else {
tb$R0EG[i]  = NA
}
}
hist(tb$R0EG)
tb.bf.R0EG = tb$R0EG
(1:length(names(tb))) [names(tb.ori)=='4/21/20']
tb.af= tb.ori[,102:122  ]
tb.af = as.data.frame(tb.af)
tb.af= tb.bf[ tb.af$`5/11/20` > 30, ]
#tb.af = tb.af[ !is.na(tb.af[,1])]
total.timepoints = 21
debug = 0
#i= 68
for( i in 1:74){
x = as.vector(t(tb[i,1:21]))
for (j in 2:length(x)){
x[j] = x[j] - x[j-1]
}
x[x<0] = 0
#str(x)
if ( max(x) > 20 ) {
mGT= generation.time("gamma", c(3, 1.5))
R0EG = estimate.R(x, GT=mGT,  methods=c('EG'), pop.size = 100000, nsim=10 )
tb$R0EG[i] = as.numeric(unlist(R0EG$estimates$EG$R))
} else {
tb$R0EG[i]  = NA
}
}
(1:length(names(tb))) [names(tb.ori)=='4/21/20']
tb.af= tb.ori[,102:122  ]
tb.af = as.data.frame(tb.af)
tb.af= tb.bf[ tb.af$`5/11/20` > 30, ] # 23 rows
(1:length(names(tb))) [names(tb.ori)=='4/21/20']
tb.af= tb.ori[,102:122  ]
tb.af = as.data.frame(tb.af)
tb.af= tb.af[ tb.af$`5/11/20` > 30, ] # 23 rows
(1:length(names(tb))) [names(tb.ori)=='4/21/20']
tb.af= tb.ori[,102:122  ]
tb.af = as.data.frame(tb.af)
tb.af= tb.af[ tb.af$`5/11/20` > 30, ] # 23 rows
total.timepoints = 21
debug = 0
#i= 68
for( i in 1:23){
x = as.vector(t(tb[i,1:21]))
for (j in 2:length(x)){
x[j] = x[j] - x[j-1]
}
x[x<0] = 0
#str(x)
if ( max(x) > 20 ) {
mGT= generation.time("gamma", c(3, 1.5))
R0EG = estimate.R(x, GT=mGT,  methods=c('EG'), pop.size = 100000, nsim=10 )
tb$R0EG[i] = as.numeric(unlist(R0EG$estimates$EG$R))
} else {
tb$R0EG[i]  = NA
}
}
View(tb.af)
i= 20
#for( i in 1:23){
x = as.vector(t(tb[i,1:21]))
for (j in 2:length(x)){
x[j] = x[j] - x[j-1]
}
x[x<0] = 0
#str(x)
if ( max(x) > 20 ) {
mGT= generation.time("gamma", c(3, 1.5))
R0EG = estimate.R(x, GT=mGT,  methods=c('EG'), pop.size = 100000, nsim=10 )
tb$R0EG[i] = as.numeric(unlist(R0EG$estimates$EG$R))
} else {
tb$R0EG[i]  = NA
}
x
(1:length(names(tb))) [names(tb.ori)=='4/21/20']
tb.af= tb.ori[,102:122  ]
tb.af = as.data.frame(tb.af)
tb.af= tb.af[ tb.af$`5/11/20` > 30, ] # 23 rows
total.timepoints = 21
debug = 0
#i= 20
for( i in 1:23){
x = as.vector(t(tb[i,1:21]))
for (j in 2:length(x)){
x[j] = x[j] - x[j-1]
}
x[x<0] = 0
#str(x)
if ( max(x, na.rm=T) > 20 ) {
mGT= generation.time("gamma", c(3, 1.5))
R0EG = estimate.R(x, GT=mGT,  methods=c('EG'), pop.size = 100000, nsim=10 )
tb$R0EG[i] = as.numeric(unlist(R0EG$estimates$EG$R))
} else {
tb$R0EG[i]  = NA
}
}
(1:length(names(tb))) [names(tb.ori)=='4/21/20']
tb.af= tb.ori[,102:122  ]
tb.af = as.data.frame(tb.af)
tb.af= tb.af[ tb.af$`5/11/20` > 30, ] # 23 rows
total.timepoints = 21
debug = 0
tb = tb.af
#i= 20
for( i in 1:23){
x = as.vector(t(tb[i,1:21]))
for (j in 2:length(x)){
x[j] = x[j] - x[j-1]
}
x[x<0] = 0
#str(x)
if ( max(x, na.rm=T) > 20 ) {
mGT= generation.time("gamma", c(3, 1.5))
R0EG = estimate.R(x, GT=mGT,  methods=c('EG'), pop.size = 100000, nsim=10 )
tb$R0EG[i] = as.numeric(unlist(R0EG$estimates$EG$R))
} else {
tb$R0EG[i]  = NA
}
}
hist(tb$R0EG)
tb.af.R0EG = tb$R0EG
t.test( tb.bf.R0EG, tb.af.R0EG)
